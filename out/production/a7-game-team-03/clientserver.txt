ClientGUI:
	Contains a main screen where the player inputs their name and the 
	host socket to connect to. Once those values are entered and the
	connect button is pressed, an attempt to connect to the host is made.
	When the host is connected to, the GUI changes to the game screen. 
	Here, the players name is listed at the top, along with if they are 
	"player" or "leader.
	The leader has a button on the right side of the screen that when pressed,
	has the associated GameClient object tell the server to start the game.
	The main part of the game screen is a ListView<String> object. My intention
	with this was for the players list of cards to be displayed there, with
	the ability to select a card to play from there.
	Thats all there is so far. The main things that are needed are areas to display
	the card at the top of the discard pile (value and color), what the previous
	player played, when the player attempts to make an illegal move, and the number
	of cards other players have.
	I've included some method prototypes that the GameClient will call when it
	receives information from the server. Hopefully that should be all it needs,
	but I will add more as needed.
	These are how Strings are passed from the client in the following methods:
		cardValue will be 1, 2, 3, etc., reverse, skip, etc.
		cardCategory will be blue, red, yellow, green, wild
		addCard:
			"cardValue cardCategory"
		removeCard:
			Same as above
		topOfDiscard:
			Same as above
		previousMove:
			"playerName"
			"cardValue cardCategory"
		winner:
			"playerName"
		numOfCards:
			"playerName"
			
	My main concern with the GUI is that I'm not sure what the best way to actually
	call for changes from the GameClient object would be. Could possibly make the 
	GridPane object global in the GUI class so it can be accessed from those methods,
	or maybe pass something to the GameClient object so it has some reference to
	work with. Really not sure, so I'll leave that decision to you. Just let me know
	what you decide, and if anything in the client needs to be changed as a result.
			
GameClient:
	Essentially, the sole purpose of the client is to listen to the server,
	tell the GUI what needs to be reflected in it, and communicate info from
	the user (through the GUI) to the server. It has methods to connect and
	perform certain communication with the server, but the main part of it
	is the thread that listens to what the server is saying, possibly performs a bit
	of interpretation, and then passes data to the GUI, and vice versa.
	
GameServer:
	Communicates with the cardGame object to find and alter the state of the game,
	and relays those changes to appropriate players.
	I can provide more information on this if needed.